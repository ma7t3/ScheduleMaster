Info, bis es in die offizielle Dokumentation übernommmen wird:
Jeder Stil wird über ein JSON-Objekt definiert und hat folgende Schlüssel:

id				| String	| Eindeutige ID, die den Stil identifiziert (wird zum Speichern im Registry verwendet)
name			| String	| Name, wie er im Einstellungsdialog angezeigt werden soll.
light_support	| bool		| Unterstützt der Stil LightMode
dark_support	| bool		| Unterstützt der Stil DarkMode
type			| String	| Art des Stils, folgende Werte sind erlaubt:
								"systemStyleFactory":	Vordefinierter Qt-Stil, der aus der QStyleFactory-Klasse erzeugt wird.
								"style_class":			Als QStyle-Klasse definierter Stil
								"style_sheet":			Als QSS-Stylesheet definierter Stil
								
Folgende Schlüssel sind abhängig vom vorher festgelegten Typ zu vergeben:

"systemStyleFactory":
=====================
systemStyleFactoryName	| String	| Schlüsselname für die QStyleFactory::create()-Funktion

"style_class":
=====================
Noch WIP (Am besten eine Art StyleHandler implementieren, in dem man als Plugin bestimmte QStyle-Klassen an eine ID gekoppelt registrieren kann)
Hier dann nur die entsprechende ID angeben (oder immer die oben einfach nehmen), die muss die QStyle-Klasse dann "anbieten".

"style_sheet:
=====================
Dateipfade für die QSS-Datei, als physische Datei oder Resource